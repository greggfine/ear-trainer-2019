{"version":3,"sources":["scripts/Sound.js","scripts/Waveform.js","scripts/Play.js","main.js"],"names":["audioCtx","AudioContext","GainSlider","range","document","querySelector","Sound","freq","gainVal","oscType","gainSlider","osc","createOscillator","amp","createGain","type","connect","destination","timer","setInterval","gain","value","playSound","start","currentTime","stop","clearInterval","Waveform","btnGroup","events","addEventListener","e","selectWaveform","target","id","waveformId","Play","playBtn","sound","init","textContent","stopSound"],"mappings":"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","file":"main.1f19ae8e.map","sourceRoot":"..","sourcesContent":["var audioCtx = new AudioContext();\n\nclass GainSlider { \n    constructor(){\n        this.range = document.querySelector('#gain-slider');\n    }\n}\n\nclass Sound {\n    constructor(freq=1000, gainVal=0.2, oscType='sine'){\n        this.freq = freq;\n        this.gainVal = gainVal;\n        this.oscType = oscType;\n        this.gainSlider = new GainSlider();\n    }\n\n    init(){\n        this.osc = audioCtx.createOscillator();\n        this.amp = audioCtx.createGain();\n        this.osc.type = this.oscType;\n        this.osc.connect(this.amp);\n        this.amp.connect(audioCtx.destination);\n        this.timer = setInterval(() => {\n            this.amp.gain.value = this.gainSlider.range.value;\n        })\n        this.playSound();\n    }\n\n    playSound(){\n        this.osc.start(audioCtx.currentTime);\n    }\n\n    stopSound(){\n        this.osc.stop(audioCtx.currentTime);\n        clearInterval(this.timer)\n    }\n}\n\nexport default Sound;","class Waveform {\n    constructor(){\n        this.btnGroup = document.querySelector('#btn-group');\n        this.events();\n    }\n    events(){\n        this.btnGroup.addEventListener('click', (e) => this.selectWaveform(e.target.id));\n    }\n    selectWaveform(waveformId){\n        this.oscType = waveformId;\n    }\n}\n\nexport default new Waveform();\n\n","import Sound from './Sound';\nimport Waveform from './Waveform';  \n\nclass Play {\n    constructor() {\n        this.playBtn = document.querySelector('#play-btn');\n        this.events();\n        this.sound = false;\n    }\n    events() {\n        this.playBtn.addEventListener('click', this.playSound);\n    }\n    playSound() {\n        if(!this.sound){\n            this.sound = new Sound(2000, 0.5, Waveform.oscType);\n            this.sound.init();\n            this.textContent = 'Stop';\n        } else {\n            this.sound.stopSound();\n            this.sound = false;\n            this.textContent = 'Play';\n        }\n    }\n}\n\nexport default Play;","import Play from './scripts/Play';\n\nvar playBtn = new Play();\n\n\n"]}