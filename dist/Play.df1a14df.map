{"version":3,"sources":["scripts/Sound.js","scripts/Waveform.js","scripts/FrequencySelector.js","FrequencyMap.js","scripts/RandomFrequency.js","scripts/Guesses.js","scripts/UserAnswer.js","scripts/GainSlider.js","scripts/Play.js"],"names":["audioCtx","AudioContext","Sound","freq","gainVal","oscType","offset","stopTime","osc","createOscillator","amp","createGain","type","frequency","value","gain","connect","destination","playSound","start","currentTime","stop","Waveform","btnGroup","document","querySelector","events","addEventListener","e","selectWaveform","target","id","waveformId","FrequencySelector","startingFreqSelector","setStartingFreq","startingFreqVal","frequencyArr","RandomFrequency","Math","floor","random","length","Guesses","randFreq","guessBtns","querySelectorAll","guessBtnArr","Array","from","correctAnswer","filter","guessBtn","Number","dataset","correct","correctScoreStatus","wrongScoreStatus","chance","answerOscType","answerGainVal","respondToUser","sound","range","init","stopSound","answerDisplay","correctScore","wrongScore","chanceDisplay","resultMessage","playBtn","playAgain","UserAnswer","answered","run","parentElement","childNodes","forEach","child","disabled","textContent","btn","createElement","classList","removeChild","setTimeout","appendChild","GainSlider","Play","startingFreq","waveform","RandomFreq","initialFreq","guesses","userAnswer","sound2","toggle","play1"],"mappings":"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","file":"Play.df1a14df.map","sourceRoot":"..","sourcesContent":["var audioCtx = new AudioContext();\n\nclass Sound {\n    constructor(freq = 261.63, gainVal=0.2, oscType='sine', offset=0, stopTime){\n        this.freq = freq;\n        this.gainVal = gainVal;\n        this.oscType = oscType;\n        this.offset = offset;\n        this.stopTime = stopTime;\n    }\n\n    init(){\n        this.osc = audioCtx.createOscillator();\n        this.amp = audioCtx.createGain();\n        this.osc.type = this.oscType;\n        this.osc.frequency.value = this.freq;\n        this.amp.gain.value = this.gainVal;\n        this.osc.connect(this.amp);\n        this.amp.connect(audioCtx.destination);\n        this.playSound();\n    }\n\n    playSound(){\n        //  this.amp.gain.setValueAtTime(1, audioCtx.currentTime);\n        this.osc.start(audioCtx.currentTime + this.offset);\n    }\n\n    stopSound(){\n        // this.amp.gain.exponentialRampToValueAtTime(0.500, audioCtx.currentTime + this.stopTime);\n        this.osc.stop(audioCtx.currentTime + this.stopTime);\n    }\n}\n\n\nexport default Sound;","class Waveform {\n    constructor(){\n        this.btnGroup = document.querySelector('#btn-group');\n        this.events();\n    }\n    events(){\n        this.btnGroup.addEventListener('click', (e) => this.selectWaveform(e.target.id));\n    }\n    selectWaveform(waveformId){\n        this.oscType = waveformId;\n    }\n}\n\nexport default new Waveform();  \n\n","class FrequencySelector {\n    constructor(){\n        this.startingFreqSelector = document.querySelector('#starting-freq-selector');\n        this.events();\n    }\n    events(){\n        this.startingFreqSelector.addEventListener('change', (e) => this.setStartingFreq(e.target.value))\n    }\n    setStartingFreq(startingFreqVal){\n        this.freq = startingFreqVal;\n    }\n}\n\nexport default new FrequencySelector();","// const frequencyMap = { \n//     \"c3\": 130.81, \n//     \"d3\": 146.83, \n//     \"e3\": 164.81, \n//     \"f3\": 174.61, \n//     \"g3\": 196.0, \n//     \"a3\": 220.0, \n//     \"b3\": 246.94, \n//     \"c4\": 261.63, \n//     \"c#4\": 277.18, \n//     \"d4\": 293.66, \n//     \"d#4\": 311.13, \n//     \"e4\": 329.63, \n//     \"f4\": 349.23, \n//     \"f#4\": 185.0, \n//     \"g4\": 392.0, \n//     \"g#4\": 207.65, \n//     \"a4\": 440.0, \n//     \"a#4\": 466.16, \n//     \"b4\": 493.88, \n//     \"c5\": 523.25 };\n\n// export default frequencyMap;\n\n// const frequencyArr = [\n//     130.81, \n//     146.83, \n//     164.81, \n//     174.61, \n//     196.0, \n//     220.0, \n//     246.94, \n//     261.63, \n//      277.18, \n//     293.66, \n//      311.13, \n//     329.63, \n//     349.23, \n//      185.0, \n//     392.0, \n//      207.65, \n//     440.0, \n//      466.16, \n//     493.88, \n//     523.25\n// ]\n\nconst frequencyArr = [\n    261.63, \n    293.66, \n    329.63, \n    349.23, \n    392.0, \n    440.0, \n    493.88, \n    523.25\n]\n\nexport default frequencyArr;","import frequencyArr from '../FrequencyMap';\n\nclass RandomFrequency {\n    constructor(){\n        this.freq = frequencyArr[Math.floor(Math.random() * frequencyArr.length) ]\n    }\n}\n\nexport default RandomFrequency;","import RandomFrequency from './RandomFrequency';\n\nclass Guesses {\n    constructor(randFreq){\n        this.guessBtns = document.querySelectorAll('.guess');\n        this.randFreq = randFreq;\n        const guessBtnArr = Array.from(this.guessBtns);\n        const correctAnswer = guessBtnArr.filter((guessBtn) => {\n            return Number(guessBtn.dataset.freq) === this.randFreq.freq;\n        })\n        this.correctAnswer = correctAnswer;\n    }\n}\n\nexport default Guesses;","import Sound from './Sound';\n\nvar correct;\nvar correctScoreStatus = 0;\nvar wrongScoreStatus = 0;\nvar chance = 0;\nvar answerOscType;\nvar answerGainVal;\n\nfunction respondToUser(freq){\n         var sound = new Sound(freq, answerGainVal.range.value, answerOscType, 0, 1);\n         sound.init();\n         sound.stopSound()\n}\n\nconst answerDisplay = document.querySelector('#answer-display');\nconst correctScore = document.querySelector('#correct-score');\nconst wrongScore = document.querySelector('#wrong-score');\nconst chanceDisplay = document.querySelector('#chance');\nconst resultMessage = document.querySelector('#result-message');\nconst playBtn = document.querySelector('#play-btn');\nconst playAgain = document.querySelector('#play-again');\n\nclass UserAnswer {\n     constructor(correctAnswer, gainVal, oscType){\n        correct = correctAnswer;\n        this.btnGroup = document.querySelector('#guesses');\n        this.gainVal = gainVal;\n        this.oscType = oscType;\n        answerOscType = oscType;\n        answerGainVal = gainVal;\n        this.answered();\n    }\n    answered(){\n        this.btnGroup.addEventListener('click', this.run)\n    }\n    run(e){\n         e.target.parentElement.childNodes.forEach((child) => {\n                child.disabled = true;\n        })\n        \n         if(chance === 2 && +e.target.dataset.freq === +correct[0].dataset.freq){\n                respondToUser(+e.target.dataset.freq);\n                chance = 0;\n                correctScore.textContent = ++correctScoreStatus;\n                resultMessage.textContent = `You got ${correctScoreStatus} correct!`\n                chanceDisplay.textContent = '';\n                playBtn.disabled = true;\n                var btn = document.createElement('button');\n                btn.textContent = 'Play Again?';\n                btn.classList = 'btn btn-info'\n                btn.addEventListener('click', function() {\n                    // CALL A 'RESET' FUNCTION HERE INSTEAD\n                    playBtn.disabled = false;\n                    correctScoreStatus = 0;\n                    wrongScoreStatus = 0;\n                    correctScore.textContent = '';\n                    wrongScore.textContent = '';\n                    resultMessage.textContent = '';\n                    chance = 0;\n                    this.parentElement.removeChild(btn)\n                    setTimeout(() => {\n                        playBtn.disabled = false;\n                    }, 500)\n                })\n                playAgain.appendChild(btn)\n                \n                return;\n            }\n            else if(chance === 2 && +e.target.dataset.freq !== +correct[0].dataset.freq){\n                respondToUser(+e.target.dataset.freq);\n                chance = 0;\n                wrongScore.textContent = ++wrongScoreStatus;\n                resultMessage.textContent = `You got ${correctScoreStatus} correct!`\n                chanceDisplay.textContent = '';\n                playBtn.disabled = true;\n                var btn = document.createElement('button');\n                btn.textContent = 'Play Again?'\n                btn.classList = 'btn btn-info'\n                btn.addEventListener('click', function() {\n                    playBtn.disabled = false;\n                    correctScoreStatus = 0;\n                    wrongScoreStatus = 0;\n                    correctScore.textContent = '';\n                    wrongScore.textContent = '';\n                    resultMessage.textContent = '';\n                    chance = 0;\n                    this.parentElement.removeChild(btn)\n                    setTimeout(() => {\n                        playBtn.disabled = false;\n                    }, 500)\n\n                })\n                playAgain.appendChild(btn)\n                return;\n            }\n         else if (+e.target.dataset.freq === +correct[0].dataset.freq){\n            respondToUser(+e.target.dataset.freq);\n            chance += 1;\n             correctScore.textContent = ++correctScoreStatus;\n             setTimeout(() => {\n                playBtn.disabled = false;\n             }, 500)\n\n         } else {\n             respondToUser(+e.target.dataset.freq);\n             wrongScore.textContent = ++wrongScoreStatus;\n             chance += 1;\n             setTimeout(() => {\n                playBtn.disabled = false;\n             }, 500)\n         }\n     }\n   \n}\n\nexport default UserAnswer;\n\n","class GainSlider { \n    constructor(){\n        this.range = document.querySelector('#gain-slider');\n    }\n}\n\nexport default GainSlider;","import Sound from './Sound';\nimport Waveform from './Waveform';  \nimport FrequencySelector from './FrequencySelector';  \nimport RandomFreq from './RandomFrequency';\nimport Guesses from './Guesses';\nimport UserAnswer from './UserAnswer';\nimport GainSlider from './GainSlider';\nconst answerDisplay = document.querySelector('#answer-display');\nvar chance = 0;\nconst chanceDisplay = document.querySelector('#chance');\nconst playAgain = document.querySelector('#play-again');\nconst guessBtns = document.querySelectorAll('.guess')\nArray.from(guessBtns).forEach((btn) => {\n    btn.disabled = true;\n})\n\nclass Play {\n    constructor(startingFreq, waveform, offset, RandomFreq, GainSlider) {\n        this.playBtn = document.querySelector('#play-btn');\n        this.sound = false;\n        this.initialFreq = startingFreq;\n        this.waveform = waveform;\n        this.offset = offset;\n        this.randFreq = RandomFreq;\n        this.gainVal = GainSlider;\n        this.events();\n\n    }\n    events() {\n            this.playBtn.addEventListener('click', () => this.playSound());\n    }\n    playSound() {\n        \n\n        Array.from(guessBtns).forEach((btn) => {\n            btn.disabled = true;\n        })\n        if(chance === 3){\n            // playAgain.removeChild(button)\n            // console.log(playAgain)\n            chance = 0;\n        }\n        if(!this.sound){\n        answerDisplay.textContent = '';\n        var randFreq = new this.randFreq();\n        var gainVal = new this.gainVal();\n        var guesses = new Guesses(randFreq);\n        var userAnswer = new UserAnswer(guesses.correctAnswer, gainVal, this.waveform.oscType);\n        chance += 1;\n        chanceDisplay.textContent = `${chance} of 3 chances`;\n\n        this.sound = new Sound(this.initialFreq.freq, gainVal.range.value, this.waveform.oscType, this.offset, 1);\n        this.sound.init();\n        this.sound.stopSound()\n\n        this.sound2 = new Sound(randFreq.freq, gainVal.range.value, this.waveform.oscType, 2, 3);\n        this.sound2.init();\n        this.sound2.stopSound();\n\n        this.playBtn.textContent = 'Listen...';\n        this.playBtn.classList.toggle('btn-danger');\n\n        setTimeout(()=>{\n            this.playBtn.textContent = 'Play'\n            this.playBtn.classList.toggle('btn-danger');\n            this.playBtn.disabled = true;\n            this.sound = false;\n            Array.from(guessBtns).forEach((btn) => {\n                btn.disabled = false;\n            })\n        }, 3300)\n        }\n    }\n}\n\nvar play1 = new Play(FrequencySelector, Waveform, 0, RandomFreq, GainSlider);\n"]}