{"version":3,"sources":["scripts/Sound.js","scripts/Waveform.js","scripts/FrequencySelector.js","FrequencyMap.js","scripts/RandomFrequency.js","scripts/Guesses.js","scripts/UserAnswer.js","scripts/Mode.js","scripts/Play.js"],"names":["Sound","audioCtx","window","AudioContext","webkitAudioContext","freq","gainVal","oscType","offset","stopTime","value","resume","osc","createOscillator","amp","createGain","type","frequency","gain","toQuadratic","connect","destination","playSound","start","currentTime","stopSound","linearRampToValueAtTime","stop","Waveform","btnGroup","document","querySelector","events","addEventListener","e","selectWaveform","target","waveformId","FrequencySelector","startingFreqSelector","setStartingFreq","startingFreqVal","frequencyMap","frequencyArrEasy","frequencyArrHard","RandomFrequency","mode","FrequencyMap","Math","floor","random","length","Guesses","randFreq","guessBtns","querySelectorAll","guessBtnArr","correctAnswer","Array","from","filter","guessBtn","Number","dataset","UserAnswer","correct","answerOscType","answerGainVal","correctScoreStatus","wrongScoreStatus","chance","respondToUser","sound","init","answerDisplay","correctScore","wrongScore","chanceDisplay","resultMessage","playBtn","playAgain","btnGroup2","answered","run","btn","parentElement","childNodes","forEach","child","disabled","textContent","createElement","classList","removeChild","setTimeout","appendChild","visibleEasy","visibleHard","add","toggle","GainSlider","gainSliderVal","String","toFixed","slice","Play","startingFreq","waveform","RandomFreq","initialFreq","guesses","sound2","play1"],"mappings":"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","file":"Play.78852d23.map","sourceRoot":"..","sourcesContent":["const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n\nclass Sound {\n    constructor(freq = 261.63, gainVal=0.5, oscType='triangle', offset=0, stopTime){\n        this.freq = freq;\n        this.gainVal = gainVal;\n        this.oscType = oscType;\n        this.offset = offset;\n        this.stopTime = stopTime;\n    }\n\n    toQuadratic(value) {\n        return value * value;\n    }\n\n    init(){\n        audioCtx.resume();\n        this.osc = audioCtx.createOscillator();\n        this.amp = audioCtx.createGain();\n        this.osc.type = this.oscType;\n        this.osc.frequency.value = this.freq;\n        // this.amp.gain.setValueAtTime(this.gainVal, audioCtx.currentTime);\n        // this.amp.gain.value = this.gainVal;\n        this.amp.gain.value = this.toQuadratic(this.gainVal);\n        this.osc.connect(this.amp);\n        this.amp.connect(audioCtx.destination);\n        this.playSound();\n    }\n\n    playSound(){\n        // gainNode.gain.setValueAtTime(0, audioCtx.currentTime);\n        this.osc.start(audioCtx.currentTime + this.offset);\n        this.stopSound();\n    }\n\n    stopSound(){\n        this.amp.gain.linearRampToValueAtTime(0.001, audioCtx.currentTime + this.stopTime - 0.1);\n        this.osc.stop(audioCtx.currentTime + this.stopTime);\n    }\n}\n\n\nexport default Sound;","class Waveform {\n    constructor(){\n        this.btnGroup = document.querySelector('#btn-group');\n        this.events();\n    }\n    events(){\n        this.btnGroup.addEventListener('change', (e) => this.selectWaveform(e.target.value));\n        // this.btnGroup.addEventListener('click', (e) => this.selectWaveform(e.target.id));\n    }\n    selectWaveform(waveformId){\n        this.oscType = waveformId;\n    }\n}\n\nexport default new Waveform();  \n\n","class FrequencySelector {\n    constructor(){\n        this.startingFreqSelector = document.querySelector('#starting-freq-selector');\n        this.events();\n    }\n    events(){\n        this.startingFreqSelector.addEventListener('change', (e) => this.setStartingFreq(e.target.value))\n    }\n    setStartingFreq(startingFreqVal){\n        this.freq = startingFreqVal;\n    }\n}\n\nexport default new FrequencySelector();","// const frequencyArr = [\n//     261.63, \n//     293.66, \n//     329.63, \n//     349.23, \n//     392.0, \n//     440.0, \n//     493.88, \n//     523.25\n// ]\n\n// export default frequencyArr;\n\n\n// ==================================================================================\n\n\n\n// const frequencyArrEasy = [\n//     261.63,\n//     293.66,\n//     329.63,\n// ]\n\n// const frequencyArrHard = [\n//     261.63,\n//     293.66,\n//     329.63,\n//     349.23,\n//     392.0,\n//     440.0,\n//     493.88,\n//     523.25\n// ]\n\nconst frequencyMap = {\n    frequencyArrEasy: [\n        261.63,\n        293.66,\n        329.63,\n        349.23,\n        392.0,\n        440.0,\n        493.88,\n        523.25,\n    ],\n    frequencyArrHard: [\n        261.63,\n        277.183,\n        293.66,\n        311.127,\n        329.63,\n        349.23,\n        369.994,\n        392.0,\n        415.305,\n        440.0,\n        466.164,\n        493.88,\n        523.25,\n    ]\n}\n\nexport default frequencyMap;","import FrequencyMap from '../FrequencyMap';\n\nconst mode = document.querySelector('#mode');\n\nclass RandomFrequency {\n    constructor(){\n        if(mode.value === 'easy'){\n            this.freq = FrequencyMap.frequencyArrEasy[Math.floor(Math.random() * FrequencyMap.frequencyArrEasy.length) ]\n        } else {\n            this.freq = FrequencyMap.frequencyArrHard[Math.floor(Math.random() * FrequencyMap.frequencyArrHard.length) ]\n\n        }\n    }\n}\n\nexport default RandomFrequency;","import RandomFrequency from './RandomFrequency';\n\nclass Guesses {\n    constructor(randFreq){\n        this.guessBtns = document.querySelectorAll('.guess');\n        this.randFreq = randFreq;\n        const guessBtnArr = Array.from(this.guessBtns);\n        const correctAnswer = guessBtnArr.filter((guessBtn) => {\n            return Number(guessBtn.dataset.freq) === this.randFreq.freq;\n        })\n        this.correctAnswer = correctAnswer;\n    }\n}\n\nexport default Guesses;","import Sound from './Sound';\n\nconst mode = document.querySelector('#mode-selector');\n\nvar correct;\nvar correctScoreStatus = 0;\nvar wrongScoreStatus = 0;\nvar chance = 0;\nvar answerOscType;\nvar answerGainVal;\n\nfunction respondToUser(freq){\n         var sound = new Sound(freq, answerGainVal.value, answerOscType, 0, 1);\n         sound.init();\n         sound.stopSound()\n}\n\nconst answerDisplay = document.querySelector('#answer-display');\nconst correctScore = document.querySelector('#correct-score');\nconst wrongScore = document.querySelector('#wrong-score');\nconst chanceDisplay = document.querySelector('#chance');\nconst resultMessage = document.querySelector('#result-message');\nconst playBtn = document.querySelector('#play-btn');\nconst playAgain = document.querySelector('#play-again');\n\nclass UserAnswer {\n     constructor(correctAnswer, gainVal, oscType){\n        correct = correctAnswer;\n        this.btnGroup = document.querySelector('#guesses');\n        this.btnGroup2 = document.querySelector('#guesses2');\n        this.gainVal = gainVal;\n        this.oscType = oscType;\n        answerOscType = oscType;\n        answerGainVal = gainVal;\n        this.answered();\n    }\n    answered(){\n        this.btnGroup.addEventListener('click', this.run)\n        this.btnGroup2.addEventListener('click', this.run)\n    }\n    run(e){\n         e.target.parentElement.childNodes.forEach((child) => {\n                child.disabled = true;\n        })\n        \n         if(chance === 4 && +e.target.dataset.freq === +correct[0].dataset.freq){\n                respondToUser(+e.target.dataset.freq);\n                chance = 0;\n                correctScore.textContent = ++correctScoreStatus;\n                resultMessage.textContent = `You got ${correctScoreStatus} correct!`\n                chanceDisplay.textContent = '';\n                playBtn.disabled = true;\n                var btn = document.createElement('button');\n                btn.textContent = 'Play Again?';\n                btn.classList = 'btn btn-outline-success btn-lg'\n                btn.addEventListener('click', function() {\n                    // CALL A 'RESET' FUNCTION HERE INSTEAD\n                    playBtn.disabled = false;\n                    correctScoreStatus = 0;\n                    wrongScoreStatus = 0;\n                    correctScore.textContent = '';\n                    wrongScore.textContent = '';\n                    resultMessage.textContent = '';\n                    chance = 0;\n                    this.parentElement.removeChild(btn)\n                    setTimeout(() => {\n                        playBtn.disabled = false;\n                        mode.disabled = false;\n                    }, 500)\n                })\n                playAgain.appendChild(btn)\n                \n                return;\n            }\n            else if(chance === 4 && +e.target.dataset.freq !== +correct[0].dataset.freq){\n                respondToUser(+e.target.dataset.freq);\n                chance = 0;\n                wrongScore.textContent = ++wrongScoreStatus;\n                resultMessage.textContent = `You got ${correctScoreStatus} correct!`\n                chanceDisplay.textContent = '';\n                playBtn.disabled = true;\n                var btn = document.createElement('button');\n                btn.textContent = 'Play Again?'\n                btn.classList = 'btn btn-outline-success btn-lg'\n                btn.addEventListener('click', function() {\n                    playBtn.disabled = false;\n                    correctScoreStatus = 0;\n                    wrongScoreStatus = 0;\n                    correctScore.textContent = '';\n                    wrongScore.textContent = '';\n                    resultMessage.textContent = '';\n                    chance = 0;\n                    this.parentElement.removeChild(btn)\n                    setTimeout(() => {\n                        playBtn.disabled = false;\n                        mode.disabled = false;\n                    }, 500)\n\n                })\n                playAgain.appendChild(btn)\n                return;\n            }\n         else if (+e.target.dataset.freq === +correct[0].dataset.freq){\n            respondToUser(+e.target.dataset.freq);\n            chance += 1;\n             correctScore.textContent = ++correctScoreStatus;\n             setTimeout(() => {\n                playBtn.disabled = false;\n             }, 500)\n\n         } else {\n             respondToUser(+e.target.dataset.freq);\n             wrongScore.textContent = ++wrongScoreStatus;\n             chance += 1;\n             setTimeout(() => {\n                playBtn.disabled = false;\n             }, 500)\n         }\n     }\n   \n}\n\n\nexport default UserAnswer;\n\n","const mode = document.querySelector('#mode');\nconst visibleEasy = document.querySelector('.visible-easy');\nconst visibleHard = document.querySelector('.visible-hard');\nvisibleEasy.classList.add('easy');\nmode.addEventListener('change', (e) => {\n    if (e.target.value === 'easy') {\n        mode.disabled = false;\n        visibleEasy.classList.toggle('easy')\n        visibleHard.classList.toggle('hard')\n\n    } else {\n        mode.disabled = false;\n        visibleEasy.classList.toggle('easy')\n        visibleHard.classList.toggle('hard')\n\n    }\n})\n\n\nexport default mode;","import Sound from './Sound';\nimport Waveform from './Waveform';  \nimport FrequencySelector from './FrequencySelector';  \nimport RandomFreq from './RandomFrequency';\nimport Guesses from './Guesses';\nimport UserAnswer from './UserAnswer';\n// import GainSlider from './GainSlider';\nimport Mode from './Mode';\nconst answerDisplay = document.querySelector('#answer-display');\nvar chance = 0;\nconst chanceDisplay = document.querySelector('#chance');\nconst playAgain = document.querySelector('#play-again');\nconst guessBtns = document.querySelectorAll('.guess');\nconst GainSlider = document.querySelector('#gain-slider');\nconst gainSliderVal = document.querySelector('#gain-slider-val');\n\nGainSlider.addEventListener('input', (e) => {\n    if(Number(e.target.value) > 0.95){\n        gainSliderVal.textContent = 10;\n    } else {\n        gainSliderVal.textContent = String(Number(e.target.value).toFixed(1)).slice(2);\n    }\n})\n\nArray.from(guessBtns).forEach((btn) => {\n    btn.disabled = true;\n})\n\nclass Play {\n    constructor(startingFreq, waveform, offset, RandomFreq, GainSlider) {\n        this.playBtn = document.querySelector('#play-btn');\n        this.sound = false;\n        this.initialFreq = startingFreq;\n        this.waveform = waveform;\n        this.offset = offset;\n        this.randFreq = RandomFreq;\n        this.gainVal = GainSlider;\n        this.events();\n    }\n    events() {\n        this.playBtn.addEventListener('click', () => this.playSound());\n    }\n    playSound() {\n        // mode.disabled = true;\n        mode.disabled = false;\n\n        Array.from(guessBtns).forEach((btn) => {\n            btn.disabled = true;\n        })\n        if(chance === 5){\n            chance = 0;\n        }\n        if(!this.sound){\n        answerDisplay.textContent = '';\n        var randFreq = new this.randFreq();\n        // var gainVal = new this.gainVal();\n        var guesses = new Guesses(randFreq);\n        var userAnswer = new UserAnswer(guesses.correctAnswer, this.gainVal, this.waveform.oscType);\n        chance += 1;\n        chanceDisplay.textContent = `${chance} of 5 chances`;\n\n        this.sound = new Sound(this.initialFreq.freq, this.gainVal.value, this.waveform.oscType, this.offset, 1);\n        // this.sound = new Sound(this.initialFreq.freq, 0.1, this.waveform.oscType, this.offset, 1);\n        this.sound.init();\n        // this.sound.stopSound()\n\n        this.sound2 = new Sound(randFreq.freq, this.gainVal.value, this.waveform.oscType, 1, 2);\n        // this.sound2 = new Sound(randFreq.freq, 0.3, this.waveform.oscType, 2, 3);\n        this.sound2.init();\n        // this.sound2.stopSound();\n\n        this.playBtn.textContent = 'Listen...';\n        // this.playBtn.classList.toggle('btn-danger');\n\n        setTimeout(()=>{\n            this.playBtn.textContent = 'Play'\n            // this.playBtn.classList.toggle('btn-danger');\n            this.playBtn.disabled = true;\n            this.sound = false;\n            Array.from(guessBtns).forEach((btn) => {\n                btn.disabled = false;\n                // btn.classList.add('guess-hover');\n            })\n        }, 2400)\n        }\n    }\n}\n\nvar play1 = new Play(FrequencySelector, Waveform, 0, RandomFreq, GainSlider);\n"]}